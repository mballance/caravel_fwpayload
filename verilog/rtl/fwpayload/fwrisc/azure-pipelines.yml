variables:
  build_num: $(Build.BuildNumber)
  
jobs:
- job: FWRISC
  pool:
   vmImage: 'ubuntu-18.04'
  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
    
  - script: |
      sudo apt-get install zlib1g-dev
      echo "Which Conda: `which conda`"
      conda create --yes --name BuildEnv
      source activate BuildEnv
    displayName: 'Setup Conda'
    
  - script: |
      source activate BuildEnv
      conda install -y -c litex-hub --name BuildEnv iverilog verilator gcc-riscv32-elf-newlib dtc
      # We need to ensure that 'gcc' and 'g++' point to the Conda versions
      source activate BuildEnv
      which_conda=`which conda`
      conda_bindir=`dirname $which_conda`
      echo "#!/bin/sh" > $conda_bindir/gcc
      echo "exec \$CC \$*" >> $conda_bindir/gcc
      chmod +x $conda_bindir/gcc
      echo "#!/bin/sh" > $conda_bindir/g++
      echo "exec \$CXX \$*" >> $conda_bindir/g++
      chmod +x $conda_bindir/g++
    displayName: 'Setup Test Tools'

  - script: |
      source activate BuildEnv
      ./scripts/ivpm.py update
    displayName: 'Fetch Packages'

  - script: |
      source activate BuildEnv
      source etc/fwrisc_env.sh
      which_conda=`which conda`
      conda_bindir=`dirname $which_conda`
      conda_dir=`dirname $conda_bindir`
      export LD_LIBRARY_PATH=$conda_dir/lib:$LD_LIBRARY_PATH
      cd ve/fwrisc_rv32i/sim
      echo "** Running Icarus Verilog Test"
      runtest.pl -j1 -tl testlists/fwrisc_riscv_azure_tests.tl -sim ivl
    displayName: 'RV32I (Icarus)'

  - script: |
      source activate BuildEnv
      source etc/fwrisc_env.sh
      which_conda=`which conda`
      conda_bindir=`dirname $which_conda`
      conda_dir=`dirname $conda_bindir`
      export LD_LIBRARY_PATH=$conda_dir/lib:$LD_LIBRARY_PATH
      cd ve/fwrisc_rv32i/sim
      echo "** Running Verilator Test"
      runtest.pl -j1 -tl testlists/fwrisc_riscv_azure_tests.tl -sim vlsim +tool.vlsim.tracevcd
    displayName: 'RV32I (Verilator)'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/result.xml'

